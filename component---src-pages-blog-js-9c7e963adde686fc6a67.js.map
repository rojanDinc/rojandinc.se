{"version":3,"file":"component---src-pages-blog-js-9c7e963adde686fc6a67.js","mappings":"iOAOMA,EAAAA,WACJ,WAAYC,EAAMC,EAAOC,GACvBC,KAAKH,KAAOA,EACZG,KAAKF,MAAQA,EACbE,KAAKD,SAAWA,EAKjB,OAJA,EAEME,WAAP,SAAkBC,GAChB,OAAO,IAAIN,EAAUM,EAAIL,KAAMK,EAAIJ,MAAO,IAAIK,KAAKD,EAAIE,QACxD,EATGR,GAYWS,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,2BAiCC,SAASC,EAAT,GAAyB,IAChCC,EAD+B,EAARC,KACVC,kBAAkBC,MAAMC,KAAI,SAACC,GAAD,OAAUhB,EAAUK,WAAWW,EAAKC,KAAKC,iBACnEC,EAAAA,EAAAA,IAAQR,GAAO,SAACS,GAAD,OAAUA,EAAKjB,SAASkB,iBAG5D,OACE,gBAAC,KAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,GAAI,IACP,sBAAIC,UAAU,aAAd,cACA,gBAAC,KAAD,QAZW,MAmBG","sources":["webpack://rojandinc.se/./src/pages/blog.js"],"sourcesContent":["import * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { Row, Col } from 'react-bootstrap';\nimport { Card, Layout, Divider } from '../components';\nimport { groupBy } from '../util';\nimport styled from 'styled-components';\n\nclass PostModel {\n  constructor(slug, title, postDate) {\n    this.slug = slug;\n    this.title = title;\n    this.postDate = postDate;\n  }\n\n  static createPost(obj) {\n    return new PostModel(obj.slug, obj.title, new Date(obj.date));\n  }\n}\n\nconst PostDate = styled.div`\n  text-decoration: none;\n`;\n\nconst Post = ({ post }) => (\n  <Col xs={12} className=\"mb-3\">\n    <Link href={post.slug}>\n      <Card className=\"p-3 d-flex flex-row justify-content-between\">\n        <div>{post.title}</div>\n        <PostDate>{post.postDate.toLocaleDateString()}</PostDate>\n      </Card>\n    </Link>\n  </Col>\n);\n\nconst PostSection = ({ section }) => {\n  const [year, collection] = section;\n  const sortPosts = (a, b) => b.postDate.getTime() - a.postDate.getTime();\n\n  return (\n    <Row key={`${year}`} className=\"mb-4\">\n      <Col>\n        <h3>{year}</h3>\n      </Col>\n      {collection.sort(sortPosts).map((post, i) => (\n        <Post key={i} post={post} />\n      ))}\n    </Row>\n  );\n};\n\nconst RENDER_POSTS = false;\n\nexport default function Blog({ data }) {\n  const posts = data.allMarkdownRemark.edges.map((edge) => PostModel.createPost(edge.node.frontmatter));\n  const groupedPosts = groupBy(posts, (post) => post.postDate.getFullYear());\n  const sortSections = (a, b) => b[0] - a[0];\n\n  return (\n    <Layout>\n      <Row>\n        <Col xs={12}>\n          <h1 className=\"font-bold\">Blog posts</h1>\n          <Divider />\n        </Col>\n      </Row>\n      {RENDER_POSTS &&\n        Object.entries(groupedPosts)\n          .sort(sortSections)\n          .map((section) => <PostSection section={section} />)}\n      {!RENDER_POSTS && <p>No posts published yet.</p>}\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(filter: { frontmatter: { key: { eq: \"blog\" } } }) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n            date(formatString: \"YYYY-MM-DD\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["PostModel","slug","title","postDate","this","createPost","obj","Date","date","styled","Blog","posts","data","allMarkdownRemark","edges","map","edge","node","frontmatter","groupBy","post","getFullYear","xs","className"],"sourceRoot":""}